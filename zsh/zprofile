
# Defines environment variables.

source ~/.aliases

export PATH="$HOME/Library/Haskell/bin:$PATH"

HISTFILE=~/.zhistory
HISTSIZE=10000000
SAVEHIST=10000000

setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.


#
# Browser
#

if [[ "$OSTYPE" == darwin* ]]; then
  export BROWSER='open'
fi


# Editors
export EDITOR='vim'
export VISUAL='vim'
export PAGER='less'

# Language
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'

# Color stuff
export CLICOLOR=1
export GREP_OPTIONS='--color=auto'

#
# Paths
#

typeset -gU cdpath fpath mailpath path

# Set the the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )

# Set the list of directories that Zsh searches for programs.
path=(
  #~/anaconda/bin
  #~/anaconda2/bin
  #~/anaconda3/bin
  /usr/local/{bin,sbin}
  /usr/{bin,sbin}
  /bin
  /sbin
  $path
)

#
# Less
#

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X and -F (exit if the content fits on one screen) to enable it.
export LESS='-F -g -i -M -R -S -w -X -z-4'

# Set the Less input preprocessor.
if (( $+commands[lesspipe.sh] )); then
  export LESSOPEN='| /usr/bin/env lesspipe.sh %s 2>&-'
fi

#
# Temporary Files
#

if [[ ! -d "$TMPDIR" ]]; then
  export TMPDIR="/tmp/$USER"
  mkdir -p -m 700 "$TMPDIR"
fi

TMPPREFIX="${TMPDIR%/}/zsh"
if [[ ! -d "$TMPPREFIX" ]]; then
  mkdir -p "$TMPPREFIX"
fi

# ROOT stuff
#pushd $(brew --prefix root6) >/dev/null; . libexec/thisroot.sh; popd >/dev/null
#cd /usr/local/opt/root
#source /usr/local/opt/root/libexec/thisroot.sh
#cd ~
#export PATH=$ROOTSYS/bin:$PATH
#export LD_LIBRARY_PATH=$ROOTSYS/lib:$PYTHONDIR/lib:$LD_LIBRARY_PATH
#export DYLD_LIBRARY_PATH=/System/Library/Frameworks/Python.framework/Versions/Current:$ROOTSYS/lib:$DYLD_LIBRARY_PATH
#export PYTHONPATH=$ROOTSYS/lib:$PYTHONPATH

# Tab completion for python
export PYTHONSTARTUP=$HOME/.pythonrc.py

# resume scp
alias scpresume='rsync --partial --progress --rsh=ssh'

# Added by Anaconda4 installer
#export PATH="/Users/mdemmer/anaconda3/bin:$PATH"

# iTerm2 SHELL integration
#source ~/.iterm2_shell_integration.`basename $SHELL`

# Mount commands
#mounthome() { sshfs $1:/home/mdemmer ~/MountPoints/$1-home -o auto_cache,reconnect,volname=$1-home,no_readahead,noappledouble,nolocalcaches,follow_symlinks }
#umounthome() { umount ~/MountPoints/$1-home }
#alias setROOT5="pushd $(brew --prefix root) >/dev/null; . libexec/thisroot.sh; popd >/dev/null"
#alias setROOT6="pushd $(brew --prefix root6) >/dev/null; . libexec/thisroot.sh; popd >/dev/null"
